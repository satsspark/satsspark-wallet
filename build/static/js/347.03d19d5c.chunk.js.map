{"version":3,"file":"static/js/347.03d19d5c.chunk.js","mappings":"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","sources":["../node_modules/nice-grpc-web/src/client/decodeMetadata.ts","../node_modules/js-base64/base64.js","../node_modules/nice-grpc-web/src/client/createUnaryMethod.ts","../node_modules/nice-grpc-web/src/utils/AsyncSink.ts","../node_modules/nice-grpc-web/src/client/createServerStreamingMethod.ts","../node_modules/nice-grpc-web/src/client/encodeRequest.ts","../node_modules/nice-grpc-web/src/client/transports/nodeHttp/browser.ts","../node_modules/nice-grpc-web/src/index.ts","../node_modules/nice-grpc-web/src/client/transports/websocket.ts","../node_modules/nice-grpc-web/src/client/framing.ts","../node_modules/nice-grpc-web/src/client/decodeResponse.ts","../node_modules/nice-grpc-web/src/client/makeInternalErrorMessage.ts","../node_modules/nice-grpc-web/src/client/channel.ts","../node_modules/nice-grpc-web/src/client/transports/fetch.ts","../node_modules/nice-grpc-web/src/client/createClientStreamingMethod.ts","../node_modules/nice-grpc-web/src/utils/asyncIterableOf.ts","../node_modules/nice-grpc-web/src/service-definitions/index.ts","../node_modules/nice-grpc-web/src/utils/isAsyncIterable.ts","../node_modules/nice-grpc-web/src/utils/concatBuffers.ts","../node_modules/nice-grpc-web/src/service-definitions/ts-proto.ts","../node_modules/isomorphic-ws/browser.js","../node_modules/nice-grpc-web/src/client/parseTrailer.ts","../node_modules/nice-grpc-web/src/client/createBidiStreamingMethod.ts","../node_modules/nice-grpc-web/src/client/makeCall.ts","../node_modules/nice-grpc-web/src/client/ClientFactory.ts","../node_modules/nice-grpc-web/src/service-definitions/grpc-web.ts"],"sourcesContent":["import {Metadata} from 'nice-grpc-common';\nimport {Base64} from 'js-base64';\n\n/** @internal */\nexport function decodeMetadata(data: Uint8Array): Metadata {\n  const metadata = Metadata();\n\n  const text = new TextDecoder().decode(data);\n\n  for (const line of text.split('\\r\\n')) {\n    if (!line) {\n      continue;\n    }\n\n    const splitIndex = line.indexOf(':');\n\n    if (splitIndex === -1) {\n      throw new Error(`Invalid metadata line: ${line}`);\n    }\n\n    const key = line.slice(0, splitIndex).trim().toLowerCase();\n    const value = line.slice(splitIndex + 1).trim();\n\n    if (key.endsWith('-bin')) {\n      for (const item of value.split(/,\\s?/)) {\n        metadata.append(key, Base64.toUint8Array(item));\n      }\n    } else {\n      metadata.append(key, value);\n    }\n  }\n\n  return metadata;\n}\n","//\n// THIS FILE IS AUTOMATICALLY GENERATED! DO NOT EDIT BY HAND!\n//\n;\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined'\n        ? module.exports = factory()\n        : typeof define === 'function' && define.amd\n            ? define(factory) :\n            // cf. https://github.com/dankogai/js-base64/issues/119\n            (function () {\n                // existing version for noConflict()\n                var _Base64 = global.Base64;\n                var gBase64 = factory();\n                gBase64.noConflict = function () {\n                    global.Base64 = _Base64;\n                    return gBase64;\n                };\n                if (global.Meteor) { // Meteor.js\n                    Base64 = gBase64;\n                }\n                global.Base64 = gBase64;\n            })();\n}((typeof self !== 'undefined' ? self\n    : typeof window !== 'undefined' ? window\n        : typeof global !== 'undefined' ? global\n            : this), function () {\n    'use strict';\n    /**\n     *  base64.ts\n     *\n     *  Licensed under the BSD 3-Clause License.\n     *    http://opensource.org/licenses/BSD-3-Clause\n     *\n     *  References:\n     *    http://en.wikipedia.org/wiki/Base64\n     *\n     * @author Dan Kogai (https://github.com/dankogai)\n     */\n    var version = '3.7.7';\n    /**\n     * @deprecated use lowercase `version`.\n     */\n    var VERSION = version;\n    var _hasBuffer = typeof Buffer === 'function';\n    var _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\n    var _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\n    var b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var b64chs = Array.prototype.slice.call(b64ch);\n    var b64tab = (function (a) {\n        var tab = {};\n        a.forEach(function (c, i) { return tab[c] = i; });\n        return tab;\n    })(b64chs);\n    var b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\n    var _fromCC = String.fromCharCode.bind(String);\n    var _U8Afrom = typeof Uint8Array.from === 'function'\n        ? Uint8Array.from.bind(Uint8Array)\n        : function (it) { return new Uint8Array(Array.prototype.slice.call(it, 0)); };\n    var _mkUriSafe = function (src) { return src\n        .replace(/=/g, '').replace(/[+\\/]/g, function (m0) { return m0 == '+' ? '-' : '_'; }); };\n    var _tidyB64 = function (s) { return s.replace(/[^A-Za-z0-9\\+\\/]/g, ''); };\n    /**\n     * polyfill version of `btoa`\n     */\n    var btoaPolyfill = function (bin) {\n        // console.log('polyfilled');\n        var u32, c0, c1, c2, asc = '';\n        var pad = bin.length % 3;\n        for (var i = 0; i < bin.length;) {\n            if ((c0 = bin.charCodeAt(i++)) > 255 ||\n                (c1 = bin.charCodeAt(i++)) > 255 ||\n                (c2 = bin.charCodeAt(i++)) > 255)\n                throw new TypeError('invalid character found');\n            u32 = (c0 << 16) | (c1 << 8) | c2;\n            asc += b64chs[u32 >> 18 & 63]\n                + b64chs[u32 >> 12 & 63]\n                + b64chs[u32 >> 6 & 63]\n                + b64chs[u32 & 63];\n        }\n        return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n    };\n    /**\n     * does what `window.btoa` of web browsers do.\n     * @param {String} bin binary string\n     * @returns {string} Base64-encoded string\n     */\n    var _btoa = typeof btoa === 'function' ? function (bin) { return btoa(bin); }\n        : _hasBuffer ? function (bin) { return Buffer.from(bin, 'binary').toString('base64'); }\n            : btoaPolyfill;\n    var _fromUint8Array = _hasBuffer\n        ? function (u8a) { return Buffer.from(u8a).toString('base64'); }\n        : function (u8a) {\n            // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n            var maxargs = 0x1000;\n            var strs = [];\n            for (var i = 0, l = u8a.length; i < l; i += maxargs) {\n                strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n            }\n            return _btoa(strs.join(''));\n        };\n    /**\n     * converts a Uint8Array to a Base64 string.\n     * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n     * @returns {string} Base64 string\n     */\n    var fromUint8Array = function (u8a, urlsafe) {\n        if (urlsafe === void 0) { urlsafe = false; }\n        return urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n    };\n    // This trick is found broken https://github.com/dankogai/js-base64/issues/130\n    // const utob = (src: string) => unescape(encodeURIComponent(src));\n    // reverting good old fationed regexp\n    var cb_utob = function (c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                    + _fromCC(0x80 | (cc & 0x3f)))\n                    : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                        + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                        + _fromCC(0x80 | (cc & 0x3f)));\n        }\n        else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n                + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n                + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                + _fromCC(0x80 | (cc & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    /**\n     * @deprecated should have been internal use only.\n     * @param {string} src UTF-8 string\n     * @returns {string} UTF-16 string\n     */\n    var utob = function (u) { return u.replace(re_utob, cb_utob); };\n    //\n    var _encode = _hasBuffer\n        ? function (s) { return Buffer.from(s, 'utf8').toString('base64'); }\n        : _TE\n            ? function (s) { return _fromUint8Array(_TE.encode(s)); }\n            : function (s) { return _btoa(utob(s)); };\n    /**\n     * converts a UTF-8-encoded string to a Base64 string.\n     * @param {boolean} [urlsafe] if `true` make the result URL-safe\n     * @returns {string} Base64 string\n     */\n    var encode = function (src, urlsafe) {\n        if (urlsafe === void 0) { urlsafe = false; }\n        return urlsafe\n            ? _mkUriSafe(_encode(src))\n            : _encode(src);\n    };\n    /**\n     * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n     * @returns {string} Base64 string\n     */\n    var encodeURI = function (src) { return encode(src, true); };\n    // This trick is found broken https://github.com/dankogai/js-base64/issues/130\n    // const btou = (src: string) => decodeURIComponent(escape(src));\n    // reverting good old fationed regexp\n    var re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\n    var cb_btou = function (cccc) {\n        switch (cccc.length) {\n            case 4:\n                var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                    | ((0x3f & cccc.charCodeAt(1)) << 12)\n                    | ((0x3f & cccc.charCodeAt(2)) << 6)\n                    | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n                return (_fromCC((offset >>> 10) + 0xD800)\n                    + _fromCC((offset & 0x3FF) + 0xDC00));\n            case 3:\n                return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    | (0x3f & cccc.charCodeAt(2)));\n            default:\n                return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                    | (0x3f & cccc.charCodeAt(1)));\n        }\n    };\n    /**\n     * @deprecated should have been internal use only.\n     * @param {string} src UTF-16 string\n     * @returns {string} UTF-8 string\n     */\n    var btou = function (b) { return b.replace(re_btou, cb_btou); };\n    /**\n     * polyfill version of `atob`\n     */\n    var atobPolyfill = function (asc) {\n        // console.log('polyfilled');\n        asc = asc.replace(/\\s+/g, '');\n        if (!b64re.test(asc))\n            throw new TypeError('malformed base64.');\n        asc += '=='.slice(2 - (asc.length & 3));\n        var u24, bin = '', r1, r2;\n        for (var i = 0; i < asc.length;) {\n            u24 = b64tab[asc.charAt(i++)] << 18\n                | b64tab[asc.charAt(i++)] << 12\n                | (r1 = b64tab[asc.charAt(i++)]) << 6\n                | (r2 = b64tab[asc.charAt(i++)]);\n            bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n                : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                    : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n        }\n        return bin;\n    };\n    /**\n     * does what `window.atob` of web browsers do.\n     * @param {String} asc Base64-encoded string\n     * @returns {string} binary string\n     */\n    var _atob = typeof atob === 'function' ? function (asc) { return atob(_tidyB64(asc)); }\n        : _hasBuffer ? function (asc) { return Buffer.from(asc, 'base64').toString('binary'); }\n            : atobPolyfill;\n    //\n    var _toUint8Array = _hasBuffer\n        ? function (a) { return _U8Afrom(Buffer.from(a, 'base64')); }\n        : function (a) { return _U8Afrom(_atob(a).split('').map(function (c) { return c.charCodeAt(0); })); };\n    /**\n     * converts a Base64 string to a Uint8Array.\n     */\n    var toUint8Array = function (a) { return _toUint8Array(_unURI(a)); };\n    //\n    var _decode = _hasBuffer\n        ? function (a) { return Buffer.from(a, 'base64').toString('utf8'); }\n        : _TD\n            ? function (a) { return _TD.decode(_toUint8Array(a)); }\n            : function (a) { return btou(_atob(a)); };\n    var _unURI = function (a) { return _tidyB64(a.replace(/[-_]/g, function (m0) { return m0 == '-' ? '+' : '/'; })); };\n    /**\n     * converts a Base64 string to a UTF-8 string.\n     * @param {String} src Base64 string.  Both normal and URL-safe are supported\n     * @returns {string} UTF-8 string\n     */\n    var decode = function (src) { return _decode(_unURI(src)); };\n    /**\n     * check if a value is a valid Base64 string\n     * @param {String} src a value to check\n      */\n    var isValid = function (src) {\n        if (typeof src !== 'string')\n            return false;\n        var s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n        return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n    };\n    //\n    var _noEnum = function (v) {\n        return {\n            value: v, enumerable: false, writable: true, configurable: true\n        };\n    };\n    /**\n     * extend String.prototype with relevant methods\n     */\n    var extendString = function () {\n        var _add = function (name, body) { return Object.defineProperty(String.prototype, name, _noEnum(body)); };\n        _add('fromBase64', function () { return decode(this); });\n        _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n        _add('toBase64URI', function () { return encode(this, true); });\n        _add('toBase64URL', function () { return encode(this, true); });\n        _add('toUint8Array', function () { return toUint8Array(this); });\n    };\n    /**\n     * extend Uint8Array.prototype with relevant methods\n     */\n    var extendUint8Array = function () {\n        var _add = function (name, body) { return Object.defineProperty(Uint8Array.prototype, name, _noEnum(body)); };\n        _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n        _add('toBase64URI', function () { return fromUint8Array(this, true); });\n        _add('toBase64URL', function () { return fromUint8Array(this, true); });\n    };\n    /**\n     * extend Builtin prototypes with relevant methods\n     */\n    var extendBuiltins = function () {\n        extendString();\n        extendUint8Array();\n    };\n    var gBase64 = {\n        version: version,\n        VERSION: VERSION,\n        atob: _atob,\n        atobPolyfill: atobPolyfill,\n        btoa: _btoa,\n        btoaPolyfill: btoaPolyfill,\n        fromBase64: decode,\n        toBase64: encode,\n        encode: encode,\n        encodeURI: encodeURI,\n        encodeURL: encodeURI,\n        utob: utob,\n        btou: btou,\n        decode: decode,\n        isValid: isValid,\n        fromUint8Array: fromUint8Array,\n        toUint8Array: toUint8Array,\n        extendString: extendString,\n        extendUint8Array: extendUint8Array,\n        extendBuiltins: extendBuiltins\n    };\n    //\n    // export Base64 to the namespace\n    //\n    // ES5 is yet to have Object.assign() that may make transpilers unhappy.\n    // gBase64.Base64 = Object.assign({}, gBase64);\n    gBase64.Base64 = {};\n    Object.keys(gBase64).forEach(function (k) { return gBase64.Base64[k] = gBase64[k]; });\n    return gBase64;\n}));\n","import {\n  CallOptions,\n  ClientError,\n  ClientMiddleware,\n  MethodDescriptor,\n  Status,\n} from 'nice-grpc-common';\nimport {MethodDefinition} from '../service-definitions';\nimport {asyncIterableOf} from '../utils/asyncIterableOf';\nimport {isAsyncIterable} from '../utils/isAsyncIterable';\nimport {Channel} from './channel';\nimport {UnaryClientMethod} from './Client';\nimport {makeCall} from './makeCall';\n\n/** @internal */\nexport function createUnaryMethod<Request, Response>(\n  definition: MethodDefinition<Request, unknown, unknown, Response>,\n  channel: Channel,\n  middleware: ClientMiddleware | undefined,\n  defaultOptions: CallOptions,\n): UnaryClientMethod<Request, Response> {\n  const methodDescriptor: MethodDescriptor = {\n    path: definition.path,\n    requestStream: definition.requestStream,\n    responseStream: definition.responseStream,\n    options: definition.options,\n  };\n\n  async function* unaryMethod(\n    request: Request,\n    options: CallOptions,\n  ): AsyncGenerator<never, Response, undefined> {\n    if (isAsyncIterable(request)) {\n      throw new Error(\n        'A middleware passed invalid request to next(): expected a single message for unary method',\n      );\n    }\n\n    const response = makeCall(\n      definition,\n      channel,\n      asyncIterableOf(request),\n      options,\n    );\n\n    let unaryResponse: Response | undefined;\n\n    for await (const message of response) {\n      if (unaryResponse != null) {\n        throw new ClientError(\n          definition.path,\n          Status.INTERNAL,\n          'Received more than one message from server for unary method',\n        );\n      }\n\n      unaryResponse = message;\n    }\n\n    if (unaryResponse == null) {\n      throw new ClientError(\n        definition.path,\n        Status.INTERNAL,\n        'Server did not return a response',\n      );\n    }\n\n    return unaryResponse;\n  }\n\n  const method =\n    middleware == null\n      ? unaryMethod\n      : (request: Request, options: CallOptions) =>\n          middleware(\n            {\n              method: methodDescriptor,\n              requestStream: false,\n              request,\n              responseStream: false,\n              next: unaryMethod,\n            },\n            options,\n          );\n\n  return async (request, options) => {\n    const iterable = method(request, {\n      ...defaultOptions,\n      ...options,\n    });\n    const iterator = iterable[Symbol.asyncIterator]();\n\n    let result = await iterator.next();\n\n    while (true) {\n      if (!result.done) {\n        result = await iterator.throw(\n          new Error(\n            'A middleware yielded a message, but expected to only return a message for unary method',\n          ),\n        );\n\n        continue;\n      }\n\n      if (result.value == null) {\n        result = await iterator.throw(\n          new Error(\n            'A middleware returned void, but expected to return a message for unary method',\n          ),\n        );\n\n        continue;\n      }\n\n      return result.value;\n    }\n  };\n}\n","// Credit: IxJS authors\n// https://github.com/ReactiveX/IxJS/blob/v4.5.1/src/asynciterable/asyncsink.ts\n// This implementation has a slight change: it silently ignores items pushed\n// after end instead of throwing an error.\n\nconst ARRAY_VALUE = 'value';\nconst ARRAY_ERROR = 'error';\n\ninterface AsyncSinkItem<T> {\n  type: string;\n  value?: T;\n  error?: any;\n}\n\ninterface AsyncResolver<T> {\n  resolve: (value: T | PromiseLike<T>) => void;\n  reject: (reason: any) => void;\n}\n\n/** @internal */\nexport class AsyncSink<TSource> implements AsyncIterableIterator<TSource> {\n  private _ended: boolean;\n  private _values: AsyncSinkItem<TSource>[];\n  private _resolvers: AsyncResolver<IteratorResult<TSource>>[];\n\n  constructor() {\n    this._ended = false;\n    this._values = [];\n    this._resolvers = [];\n  }\n\n  [Symbol.asyncIterator]() {\n    return this;\n  }\n\n  write(value: TSource) {\n    this._push({type: ARRAY_VALUE, value});\n  }\n\n  error(error: any) {\n    this._push({type: ARRAY_ERROR, error});\n  }\n\n  private _push(item: AsyncSinkItem<TSource>) {\n    if (this._ended) {\n      return;\n    }\n\n    if (this._resolvers.length > 0) {\n      const {resolve, reject} = this._resolvers.shift()!;\n      if (item.type === ARRAY_ERROR) {\n        reject(item.error!);\n      } else {\n        resolve({done: false, value: item.value!});\n      }\n    } else {\n      this._values.push(item);\n    }\n  }\n\n  next() {\n    if (this._values.length > 0) {\n      const {type, value, error} = this._values.shift()!;\n      if (type === ARRAY_ERROR) {\n        return Promise.reject(error);\n      } else {\n        return Promise.resolve({done: false, value} as IteratorResult<TSource>);\n      }\n    }\n\n    if (this._ended) {\n      return Promise.resolve({done: true} as IteratorResult<TSource>);\n    }\n\n    return new Promise<IteratorResult<TSource>>((resolve, reject) => {\n      this._resolvers.push({resolve, reject});\n    });\n  }\n\n  end() {\n    while (this._resolvers.length > 0) {\n      this._resolvers.shift()!.resolve({done: true} as IteratorResult<TSource>);\n    }\n    this._ended = true;\n  }\n}\n","import {\n  CallOptions,\n  ClientMiddleware,\n  MethodDescriptor,\n} from 'nice-grpc-common';\nimport {MethodDefinition} from '../service-definitions';\nimport {asyncIterableOf} from '../utils/asyncIterableOf';\nimport {isAsyncIterable} from '../utils/isAsyncIterable';\nimport {Channel} from './channel';\nimport {ServerStreamingClientMethod} from './Client';\nimport {makeCall} from './makeCall';\n\n/** @internal */\nexport function createServerStreamingMethod<Request, Response>(\n  definition: MethodDefinition<Request, unknown, unknown, Response>,\n  channel: Channel,\n  middleware: ClientMiddleware | undefined,\n  defaultOptions: CallOptions,\n): ServerStreamingClientMethod<Request, Response> {\n  const methodDescriptor: MethodDescriptor = {\n    path: definition.path,\n    requestStream: definition.requestStream,\n    responseStream: definition.responseStream,\n    options: definition.options,\n  };\n\n  async function* serverStreamingMethod(\n    request: Request,\n    options: CallOptions,\n  ): AsyncGenerator<Response, void, undefined> {\n    if (isAsyncIterable(request)) {\n      throw new Error(\n        'A middleware passed invalid request to next(): expected a single message for server streaming method',\n      );\n    }\n\n    const response = makeCall(\n      definition,\n      channel,\n      asyncIterableOf(request),\n      options,\n    );\n\n    yield* response;\n  }\n\n  const method =\n    middleware == null\n      ? serverStreamingMethod\n      : (request: Request, options: CallOptions) =>\n          middleware(\n            {\n              method: methodDescriptor,\n              requestStream: false,\n              request,\n              responseStream: true,\n              next: serverStreamingMethod,\n            },\n            options,\n          );\n\n  return (request, options) => {\n    const iterable = method(request, {\n      ...defaultOptions,\n      ...options,\n    });\n    const iterator = iterable[Symbol.asyncIterator]();\n\n    return {\n      [Symbol.asyncIterator]() {\n        return {\n          async next() {\n            const result = await iterator.next();\n\n            if (result.done && result.value != null) {\n              return await iterator.throw(\n                new Error(\n                  'A middleware returned a message, but expected to return void for server streaming method',\n                ),\n              );\n            }\n\n            return result;\n          },\n          return() {\n            return iterator.return();\n          },\n          throw(err) {\n            return iterator.throw(err);\n          },\n        };\n      },\n    };\n  };\n}\n","import {encodeFrame} from './framing';\n\n/** @internal */\nexport type EncodeRequestParams<T> = {\n  request: AsyncIterable<T>;\n  encode(data: T): Uint8Array;\n};\n\n/** @internal */\nexport async function* encodeRequest<T>({\n  request,\n  encode,\n}: EncodeRequestParams<T>): AsyncIterable<Uint8Array> {\n  for await (const data of request) {\n    const bytes = encode(data);\n\n    yield encodeFrame(bytes);\n  }\n}\n","import {Transport} from '../../Transport';\n\nexport function NodeHttpTransport(): Transport {\n  throw new Error('NodeHttpTransport is not supported in the browser');\n}\n","export {\n  CallOptions,\n  ClientError,\n  ClientMiddleware,\n  ClientMiddlewareCall,\n  ClientMiddlewareCallRequest,\n  ClientMiddlewareCallResponse,\n  composeClientMiddleware,\n  Metadata,\n  MetadataConstructor,\n  MetadataInit,\n  MetadataValue,\n  MethodDescriptor,\n  Status,\n} from 'nice-grpc-common';\n\nexport * from './service-definitions';\n\nexport * from './client/channel';\nexport * from './client/ClientFactory';\nexport * from './client/Client';\n\nexport {FetchTransport} from './client/transports/fetch';\nexport {WebsocketTransport} from './client/transports/websocket';\nexport {NodeHttpTransport} from './client/transports/nodeHttp';\n","import {\n  AbortError,\n  isAbortError,\n  throwIfAborted,\n  waitForEvent,\n} from 'abort-controller-x';\nimport WebSocket from 'isomorphic-ws';\nimport {Base64} from 'js-base64';\nimport {Metadata} from 'nice-grpc-common';\nimport {AsyncSink} from '../../utils/AsyncSink';\nimport {Frame, Transport} from '../Transport';\n\n/**\n * Transport based on WebSockets. Works only with `grpcwebproxy`.\n */\nexport function WebsocketTransport(): Transport {\n  return async function* ({url, body, metadata, signal}) {\n    if (signal.aborted) {\n      throw new AbortError();\n    }\n\n    const frames = new AsyncSink<Frame>();\n\n    signal.addEventListener('abort', () => {\n      frames.error(new AbortError());\n    });\n\n    const websocketUrl = new URL(url);\n\n    websocketUrl.protocol = websocketUrl.protocol.replace('http', 'ws');\n\n    const webSocket = new WebSocket(websocketUrl, ['grpc-websockets']);\n    webSocket.binaryType = 'arraybuffer';\n\n    webSocket.addEventListener('message', event => {\n      if (event.data instanceof ArrayBuffer) {\n        frames.write({\n          type: 'data',\n          data: new Uint8Array(event.data),\n        });\n      } else {\n        frames.error(\n          new Error(`Unexpected message type: ${typeof event.data}`),\n        );\n      }\n    });\n\n    webSocket.addEventListener('close', event => {\n      if (event.wasClean) {\n        frames.end();\n      } else {\n        frames.error(\n          new Error(\n            `WebSocket closed with code ${event.code}` +\n              (event.reason && `: ${event.reason}`),\n          ),\n        );\n      }\n    });\n\n    const pipeAbortController = new AbortController();\n\n    pipeBody(pipeAbortController.signal, metadata, body, webSocket).catch(\n      err => {\n        if (!isAbortError(err)) {\n          frames.error(err);\n        }\n      },\n    );\n\n    try {\n      return yield* frames;\n    } finally {\n      pipeAbortController.abort();\n      webSocket.close();\n    }\n  };\n}\n\nasync function pipeBody(\n  signal: AbortSignal,\n  metadata: Metadata,\n  body: AsyncIterable<Uint8Array>,\n  webSocket: WebSocket,\n): Promise<void> {\n  if (webSocket.readyState == WebSocket.CONNECTING) {\n    await waitForEvent(signal, webSocket, 'open');\n  }\n\n  webSocket.send(encodeMetadata(metadata));\n\n  for await (const chunk of body) {\n    throwIfAborted(signal);\n\n    const data = new Uint8Array(chunk.length + 1);\n    data.set([0], 0);\n    data.set(chunk, 1);\n\n    webSocket.send(data);\n  }\n\n  webSocket.send(new Uint8Array([1]));\n}\n\nfunction encodeMetadata(metadata: Metadata): Uint8Array {\n  let result = '';\n\n  for (const [key, values] of metadata) {\n    for (const value of values) {\n      const valueString =\n        typeof value === 'string' ? value : Base64.fromUint8Array(value);\n\n      const pairString = `${key}: ${valueString}\\r\\n`;\n\n      for (let i = 0; i < pairString.length; i++) {\n        const charCode = pairString.charCodeAt(i);\n\n        if (!isValidCharCode(charCode)) {\n          throw new Error(\n            `Metadata contains invalid characters: '${pairString}'`,\n          );\n        }\n      }\n\n      result += pairString;\n    }\n  }\n\n  return new TextEncoder().encode(result);\n}\n\n/**\n * Checks whether the given number represents a valid character code.\n * It returns true if the number is 0x9 (tab), 0xa (line feed), 0xd (carriage\n * return), or any printable character.\n */\nfunction isValidCharCode(val: number): boolean {\n  return (\n    val === 0x9 || val === 0xa || val === 0xd || (val >= 0x20 && val <= 0x7e)\n  );\n}\n","/**\n * Length-Prefixed-Message → Compressed-Flag Message-Length Message\n * Compressed-Flag → 0 / 1 # encoded as 1 byte unsigned integer\n * Message-Length → {length of Message} # encoded as 4 byte unsigned integer (big endian)\n * Message → *{binary octet}\n *\n * https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md\n *\n * For gRPC-Web the 8th (MSB) bit of the 1st gRPC frame byte also indicates\n * whether the message represents metadata.\n *\n * https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-WEB.md\n *\n * @internal\n */\nexport const LPM_HEADER_LENGTH = 5;\n\n/** @internal */\nexport type ParsedLpmHeader = {\n  compressed: boolean;\n  isMetadata: boolean;\n  length: number;\n};\n\n/** @internal */\nexport function parseLpmHeader(data: Uint8Array): ParsedLpmHeader {\n  if (data.length !== LPM_HEADER_LENGTH) {\n    throw new Error(`Invalid LPM header length: ${data.length}`);\n  }\n\n  const view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n\n  const compressed = (view.getUint8(0) & 1) !== 0;\n  const isMetadata = (view.getUint8(0) & 0x80) !== 0;\n  const length = view.getUint32(1);\n\n  return {\n    compressed,\n    isMetadata,\n    length,\n  };\n}\n\n/** @internal */\nexport function encodeFrame(data: Uint8Array): Uint8Array {\n  const messageBytes = new Uint8Array(LPM_HEADER_LENGTH + data.length);\n\n  new DataView(messageBytes.buffer, 1, 4).setUint32(0, data.length, false);\n  messageBytes.set(data, LPM_HEADER_LENGTH);\n\n  return messageBytes;\n}\n","import {Metadata} from 'nice-grpc-common';\nimport {concatBuffers} from '../utils/concatBuffers';\nimport {decodeMetadata} from './decodeMetadata';\nimport {LPM_HEADER_LENGTH, ParsedLpmHeader, parseLpmHeader} from './framing';\nimport {Frame} from './Transport';\n\n/** @internal */\nexport type DecodeResponseParams<T> = {\n  response: AsyncIterable<Frame>;\n  decode(data: Uint8Array): T;\n  onHeader(header: Metadata): void;\n  onTrailer(trailer: Metadata): void;\n};\n\n/** @internal */\nexport async function* decodeResponse<T>({\n  response,\n  decode,\n  onHeader,\n  onTrailer,\n}: DecodeResponseParams<T>): AsyncIterable<T> {\n  let receivedHeader = false;\n  let receivedTrailer = false;\n  let receivedData = false;\n\n  type ChunkBuffer = {\n    chunks: Uint8Array[];\n    totalLength: number;\n    targetLength: number;\n  };\n\n  let buffer: ChunkBuffer = createChunkBuffer(LPM_HEADER_LENGTH);\n  let lpmHeader: ParsedLpmHeader | undefined;\n\n  for await (const frame of response) {\n    if (frame.type === 'header') {\n      handleHeader(frame.header);\n    } else if (frame.type === 'trailer') {\n      handleTrailer(frame.trailer);\n    } else if (frame.type === 'data') {\n      if (receivedTrailer) {\n        throw new Error('Received data after trailer');\n      }\n\n      let {data} = frame;\n\n      while (data.length > 0 || lpmHeader?.length === 0) {\n        const position = Math.min(\n          data.length,\n          buffer.targetLength - buffer.totalLength,\n        );\n\n        const chunk = data.subarray(0, position);\n        data = data.subarray(position);\n\n        buffer.chunks.push(chunk);\n        buffer.totalLength += chunk.length;\n\n        if (buffer.totalLength === buffer.targetLength) {\n          const messageBytes = concatBuffers(buffer.chunks, buffer.totalLength);\n\n          if (lpmHeader == null) {\n            lpmHeader = parseLpmHeader(messageBytes);\n            buffer = createChunkBuffer(lpmHeader.length);\n          } else {\n            if (lpmHeader.compressed) {\n              throw new Error('Compressed messages not supported');\n            }\n\n            if (lpmHeader.isMetadata) {\n              if (!receivedHeader) {\n                handleHeader(decodeMetadata(messageBytes));\n              } else {\n                handleTrailer(decodeMetadata(messageBytes));\n              }\n            } else {\n              if (!receivedHeader) {\n                throw new Error('Received data before header');\n              }\n\n              yield decode(messageBytes);\n\n              receivedData = true;\n            }\n\n            lpmHeader = undefined;\n            buffer = createChunkBuffer(LPM_HEADER_LENGTH);\n          }\n        }\n      }\n    }\n  }\n\n  function handleHeader(header: Metadata) {\n    if (receivedHeader) {\n      throw new Error('Received multiple headers');\n    }\n\n    if (receivedData) {\n      throw new Error('Received header after data');\n    }\n\n    if (receivedTrailer) {\n      throw new Error('Received header after trailer');\n    }\n\n    receivedHeader = true;\n\n    onHeader(header);\n  }\n\n  function handleTrailer(trailer: Metadata) {\n    if (receivedTrailer) {\n      throw new Error('Received multiple trailers');\n    }\n\n    receivedTrailer = true;\n\n    onTrailer(trailer);\n  }\n\n  function createChunkBuffer(targetLength: number): ChunkBuffer {\n    return {\n      chunks: [],\n      totalLength: 0,\n      targetLength,\n    };\n  }\n}\n","/** @internal */\nexport function makeInternalErrorMessage(err: any): string {\n  if (err == null || typeof err !== 'object') {\n    return String(err);\n  } else if (typeof err.message === 'string') {\n    return err.message;\n  } else {\n    return JSON.stringify(err);\n  }\n}\n","import {Transport} from './Transport';\nimport {FetchTransport} from './transports/fetch';\n\n/**\n * A channel represents a remote endpoint that can be connected to.\n */\nexport type Channel = {\n  address: string;\n  transport: Transport;\n};\n\n/**\n * Creates a new channel.\n *\n * @param address The address of the server, in the form `protocol://host:port`,\n *     where `protocol` is one of `http` or `https`. If the port is not\n *     specified, it will be inferred from the protocol.\n * @param transport The transport to use for the channel. If not specified, the\n *     default transport based on `fetch` will be used. Other supported\n *     transports include `WebsocketTransport` (works only with `grpcwebproxy`)\n *     and `NodeHttpTransport` (works only in NodeJS).\n */\nexport function createChannel(\n  address: string,\n  transport: Transport = FetchTransport(),\n): Channel {\n  return {address, transport};\n}\n","import {throwIfAborted} from 'abort-controller-x';\nimport {Base64} from 'js-base64';\nimport {ClientError, Metadata, Status} from 'nice-grpc-common';\nimport {Transport} from '../Transport';\n\nexport interface FetchTransportConfig {\n  credentials?: RequestCredentials;\n  cache?: RequestCache;\n}\n\n/**\n * Transport for browsers based on `fetch` API.\n */\nexport function FetchTransport(config?: FetchTransportConfig): Transport {\n  return async function* fetchTransport({url, body, metadata, signal, method}) {\n    let requestBody: BodyInit;\n\n    if (!method.requestStream) {\n      let bodyBuffer: Uint8Array | undefined;\n\n      for await (const chunk of body) {\n        bodyBuffer = chunk;\n\n        break;\n      }\n\n      requestBody = bodyBuffer!;\n    } else {\n      let iterator: AsyncIterator<Uint8Array> | undefined;\n\n      requestBody = new ReadableStream({\n        type: 'bytes',\n        start() {\n          iterator = body[Symbol.asyncIterator]();\n        },\n\n        async pull(controller) {\n          const {done, value} = await iterator!.next();\n\n          if (done) {\n            controller.close();\n          } else {\n            controller.enqueue(value);\n          }\n        },\n        async cancel() {\n          await iterator!.return?.();\n        },\n      });\n    }\n\n    const response = await fetch(url, {\n      method: 'POST',\n      body: requestBody,\n      headers: metadataToHeaders(metadata),\n      signal,\n      cache: config?.cache,\n      ['duplex' as any]: 'half',\n      credentials: config?.credentials,\n    });\n\n    yield {\n      type: 'header',\n      header: headersToMetadata(response.headers),\n    };\n\n    if (!response.ok) {\n      const responseText = await response.text();\n\n      throw new ClientError(\n        method.path,\n        getStatusFromHttpCode(response.status),\n        getErrorDetailsFromHttpResponse(response.status, responseText),\n      );\n    }\n\n    throwIfAborted(signal);\n\n    const reader = response.body!.getReader();\n\n    const abortListener = () => {\n      reader.cancel().catch(() => {});\n    };\n\n    signal.addEventListener('abort', abortListener);\n\n    try {\n      while (true) {\n        const {done, value} = await reader.read();\n\n        if (value != null) {\n          yield {\n            type: 'data',\n            data: value,\n          };\n        }\n\n        if (done) {\n          break;\n        }\n      }\n    } finally {\n      signal.removeEventListener('abort', abortListener);\n\n      throwIfAborted(signal);\n    }\n  };\n}\n\nfunction metadataToHeaders(metadata: Metadata): Headers {\n  const headers = new Headers();\n\n  for (const [key, values] of metadata) {\n    for (const value of values) {\n      headers.append(\n        key,\n        typeof value === 'string' ? value : Base64.fromUint8Array(value),\n      );\n    }\n  }\n\n  return headers;\n}\n\nfunction headersToMetadata(headers: Headers): Metadata {\n  const metadata = new Metadata();\n\n  for (const [key, value] of headers) {\n    if (key.endsWith('-bin')) {\n      for (const item of value.split(/,\\s?/)) {\n        metadata.append(key, Base64.toUint8Array(item));\n      }\n    } else {\n      metadata.set(key, value);\n    }\n  }\n\n  return metadata;\n}\n\nfunction getStatusFromHttpCode(statusCode: number): Status {\n  switch (statusCode) {\n    case 400:\n      return Status.INTERNAL;\n    case 401:\n      return Status.UNAUTHENTICATED;\n    case 403:\n      return Status.PERMISSION_DENIED;\n    case 404:\n      return Status.UNIMPLEMENTED;\n    case 429:\n    case 502:\n    case 503:\n    case 504:\n      return Status.UNAVAILABLE;\n    default:\n      return Status.UNKNOWN;\n  }\n}\n\nfunction getErrorDetailsFromHttpResponse(\n  statusCode: number,\n  responseText: string,\n): string {\n  return (\n    `Received HTTP ${statusCode} response: ` +\n    (responseText.length > 1000\n      ? responseText.slice(0, 1000) + '... (truncated)'\n      : responseText)\n  );\n}\n","import {\n  CallOptions,\n  ClientError,\n  ClientMiddleware,\n  MethodDescriptor,\n  Status,\n} from 'nice-grpc-common';\nimport {MethodDefinition} from '../service-definitions';\nimport {isAsyncIterable} from '../utils/isAsyncIterable';\nimport {Channel} from './channel';\nimport {ClientStreamingClientMethod} from './Client';\nimport {makeCall} from './makeCall';\n\n/** @internal */\nexport function createClientStreamingMethod<Request, Response>(\n  definition: MethodDefinition<Request, unknown, unknown, Response>,\n  channel: Channel,\n  middleware: ClientMiddleware | undefined,\n  defaultOptions: CallOptions,\n): ClientStreamingClientMethod<Request, Response> {\n  const methodDescriptor: MethodDescriptor = {\n    path: definition.path,\n    requestStream: definition.requestStream,\n    responseStream: definition.responseStream,\n    options: definition.options,\n  };\n\n  async function* clientStreamingMethod(\n    request: AsyncIterable<Request>,\n    options: CallOptions,\n  ): AsyncGenerator<never, Response, undefined> {\n    if (!isAsyncIterable(request)) {\n      throw Error(\n        'A middleware passed invalid request to next(): expected a single message for client streaming method',\n      );\n    }\n\n    const response = makeCall(definition, channel, request, options);\n\n    let unaryResponse: Response | undefined;\n\n    for await (const message of response) {\n      if (unaryResponse != null) {\n        throw new ClientError(\n          definition.path,\n          Status.INTERNAL,\n          'Received more than one message from server for client streaming method',\n        );\n      }\n\n      unaryResponse = message;\n    }\n\n    if (unaryResponse == null) {\n      throw new ClientError(\n        definition.path,\n        Status.INTERNAL,\n        'Server did not return a response',\n      );\n    }\n\n    return unaryResponse;\n  }\n\n  const method =\n    middleware == null\n      ? clientStreamingMethod\n      : (request: AsyncIterable<Request>, options: CallOptions) =>\n          middleware(\n            {\n              method: methodDescriptor,\n              requestStream: true,\n              request,\n              responseStream: false,\n              next: clientStreamingMethod,\n            },\n            options,\n          );\n\n  return async (request, options) => {\n    const iterable = method(request, {\n      ...defaultOptions,\n      ...options,\n    });\n    const iterator = iterable[Symbol.asyncIterator]();\n\n    let result = await iterator.next();\n\n    while (true) {\n      if (!result.done) {\n        result = await iterator.throw(\n          new Error(\n            'A middleware yielded a message, but expected to only return a message for client streaming method',\n          ),\n        );\n\n        continue;\n      }\n\n      if (result.value == null) {\n        result = await iterator.throw(\n          new Error(\n            'A middleware returned void, but expected to return a message for client streaming method',\n          ),\n        );\n\n        continue;\n      }\n\n      return result.value;\n    }\n  };\n}\n","/** @internal */\nexport async function* asyncIterableOf<T>(item: T): AsyncIterable<T> {\n  yield item;\n}\n","import {\n  fromGrpcWebServiceDefinition,\n  FromGrpcWebServiceDefinition,\n  GrpcWebServiceDefinition,\n  isGrpcWebServiceDefinition,\n} from './grpc-web';\nimport {\n  fromTsProtoServiceDefinition,\n  FromTsProtoServiceDefinition,\n  isTsProtoServiceDefinition,\n  TsProtoServiceDefinition,\n} from './ts-proto';\n\nexport type ServiceDefinition = {\n  [method: string]: AnyMethodDefinition;\n};\n\nexport type MethodDefinition<\n  RequestIn,\n  RequestOut,\n  ResponseIn,\n  ResponseOut,\n  RequestStream extends boolean = boolean,\n  ResponseStream extends boolean = boolean,\n> = {\n  path: string;\n  requestStream: RequestStream;\n  responseStream: ResponseStream;\n  requestSerialize(value: RequestIn): Uint8Array;\n  requestDeserialize(bytes: Uint8Array): RequestOut;\n  responseSerialize(value: ResponseIn): Uint8Array;\n  responseDeserialize(bytes: Uint8Array): ResponseOut;\n  options: {\n    idempotencyLevel?: 'IDEMPOTENT' | 'NO_SIDE_EFFECTS';\n  };\n};\n\nexport type AnyMethodDefinition = MethodDefinition<any, any, any, any>;\n\nexport type CompatServiceDefinition =\n  | ServiceDefinition\n  | GrpcWebServiceDefinition\n  | TsProtoServiceDefinition;\n\nexport type NormalizedServiceDefinition<\n  Service extends CompatServiceDefinition,\n> = Service extends ServiceDefinition\n  ? Service\n  : Service extends GrpcWebServiceDefinition\n  ? FromGrpcWebServiceDefinition<Service>\n  : Service extends TsProtoServiceDefinition\n  ? FromTsProtoServiceDefinition<Service>\n  : never;\n\n/** @internal */\nexport function normalizeServiceDefinition(\n  definition: CompatServiceDefinition,\n): ServiceDefinition {\n  if (isGrpcWebServiceDefinition(definition)) {\n    return fromGrpcWebServiceDefinition(definition);\n  } else if (isTsProtoServiceDefinition(definition)) {\n    return fromTsProtoServiceDefinition(definition);\n  } else {\n    return definition;\n  }\n}\n","/** @internal */\nexport function isAsyncIterable(value: any): value is AsyncIterable<unknown> {\n  return value != null && Symbol.asyncIterator in value;\n}\n","/** @internal */\nexport function concatBuffers(\n  buffers: Uint8Array[],\n  totalLength: number,\n): Uint8Array {\n  if (buffers.length === 1) {\n    return buffers[0];\n  }\n\n  const result = new Uint8Array(totalLength);\n\n  let offset = 0;\n\n  for (const buffer of buffers) {\n    result.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return result;\n}\n","import {CompatServiceDefinition, MethodDefinition, ServiceDefinition} from '.';\n\nexport type TsProtoServiceDefinition = {\n  name: string;\n  fullName: string;\n  methods: {\n    [method: string]: TsProtoMethodDefinition<any, any>;\n  };\n};\n\nexport type TsProtoMethodDefinition<Request, Response> = {\n  name: string;\n  requestType: TsProtoMessageType<Request>;\n  requestStream: boolean;\n  responseType: TsProtoMessageType<Response>;\n  responseStream: boolean;\n  options: {\n    idempotencyLevel?: 'IDEMPOTENT' | 'NO_SIDE_EFFECTS';\n    _unknownFields?: {};\n  };\n};\n\nexport type TsProtoMessageType<Message> = {\n  encode(message: Message): ProtobufJsWriter;\n  decode(input: Uint8Array): Message;\n  fromPartial?(object: unknown): Message;\n};\n\nexport type ProtobufJsWriter = {\n  finish(): Uint8Array;\n};\n\nexport type TsProtoMessageIn<Type extends TsProtoMessageType<any>> =\n  Type['fromPartial'] extends Function\n    ? Parameters<Type['fromPartial']>[0]\n    : Type extends TsProtoMessageType<infer Message>\n    ? Message\n    : never;\n\nexport type FromTsProtoServiceDefinition<\n  Service extends TsProtoServiceDefinition,\n> = {\n  [M in keyof Service['methods']]: FromTsProtoMethodDefinition<\n    Service['methods'][M]\n  >;\n};\n\nexport type FromTsProtoMethodDefinition<Method> =\n  Method extends TsProtoMethodDefinition<infer Request, infer Response>\n    ? MethodDefinition<\n        TsProtoMessageIn<Method['requestType']>,\n        Request,\n        TsProtoMessageIn<Method['responseType']>,\n        Response,\n        Method['requestStream'],\n        Method['responseStream']\n      >\n    : never;\n\nexport function fromTsProtoServiceDefinition(\n  definition: TsProtoServiceDefinition,\n): ServiceDefinition {\n  const result: ServiceDefinition = {};\n\n  for (const [key, method] of Object.entries(definition.methods)) {\n    const requestEncode = method.requestType.encode;\n    const requestFromPartial = method.requestType.fromPartial;\n    const responseEncode = method.responseType.encode;\n    const responseFromPartial = method.responseType.fromPartial;\n\n    result[key] = {\n      path: `/${definition.fullName}/${method.name}`,\n      requestStream: method.requestStream,\n      responseStream: method.responseStream,\n      requestDeserialize: method.requestType.decode,\n      requestSerialize:\n        requestFromPartial != null\n          ? value => requestEncode(requestFromPartial(value)).finish()\n          : value => requestEncode(value).finish(),\n      responseDeserialize: method.responseType.decode,\n      responseSerialize:\n        responseFromPartial != null\n          ? value => responseEncode(responseFromPartial(value)).finish()\n          : value => responseEncode(value).finish(),\n      options: method.options,\n    };\n  }\n\n  return result;\n}\n\nexport function isTsProtoServiceDefinition(\n  definition: CompatServiceDefinition,\n): definition is TsProtoServiceDefinition {\n  return (\n    'name' in definition && 'fullName' in definition && 'methods' in definition\n  );\n}\n","// https://github.com/maxogden/websocket-stream/blob/48dc3ddf943e5ada668c31ccd94e9186f02fafbd/ws-fallback.js\n\nvar ws = null\n\nif (typeof WebSocket !== 'undefined') {\n  ws = WebSocket\n} else if (typeof MozWebSocket !== 'undefined') {\n  ws = MozWebSocket\n} else if (typeof global !== 'undefined') {\n  ws = global.WebSocket || global.MozWebSocket\n} else if (typeof window !== 'undefined') {\n  ws = window.WebSocket || window.MozWebSocket\n} else if (typeof self !== 'undefined') {\n  ws = self.WebSocket || self.MozWebSocket\n}\n\nexport default ws\n","import {Metadata, Status} from 'nice-grpc-common';\n\n/** @internal */\nexport type ParsedTrailer = {\n  status: Status;\n  message?: string;\n  trailer: Metadata;\n};\n\n/** @internal */\nexport function parseTrailer(trailer: Metadata): ParsedTrailer {\n  let status: Status;\n\n  const statusValue = trailer.get('grpc-status');\n\n  if (statusValue != null) {\n    const statusNum = +statusValue;\n\n    if (statusNum in Status) {\n      status = statusNum;\n    } else {\n      throw new Error(\n        `Received invalid status code from server: ${statusValue}`,\n      );\n    }\n  } else {\n    throw new Error('Received no status code from server');\n  }\n\n  let message = trailer.get('grpc-message');\n\n  if (message != null) {\n    try {\n      message = decodeURIComponent(message);\n    } catch {\n      // ignore\n    }\n  }\n\n  const trailerCopy = Metadata(trailer);\n  trailerCopy.delete('grpc-status');\n  trailerCopy.delete('grpc-message');\n\n  return {\n    status,\n    message,\n    trailer: trailerCopy,\n  };\n}\n","import {\n  CallOptions,\n  ClientMiddleware,\n  MethodDescriptor,\n} from 'nice-grpc-common';\nimport {MethodDefinition} from '../service-definitions';\nimport {isAsyncIterable} from '../utils/isAsyncIterable';\nimport {Channel} from './channel';\nimport {BidiStreamingClientMethod} from './Client';\nimport {makeCall} from './makeCall';\n\n/** @internal */\nexport function createBidiStreamingMethod<Request, Response>(\n  definition: MethodDefinition<Request, unknown, unknown, Response>,\n  channel: Channel,\n  middleware: ClientMiddleware | undefined,\n  defaultOptions: CallOptions,\n): BidiStreamingClientMethod<Request, Response> {\n  const methodDescriptor: MethodDescriptor = {\n    path: definition.path,\n    requestStream: definition.requestStream,\n    responseStream: definition.responseStream,\n    options: definition.options,\n  };\n\n  async function* bidiStreamingMethod(\n    request: AsyncIterable<Request>,\n    options: CallOptions,\n  ): AsyncGenerator<Response, void, undefined> {\n    if (!isAsyncIterable(request)) {\n      throw new Error(\n        'A middleware passed invalid request to next(): expected a single message for bidirectional streaming method',\n      );\n    }\n\n    const response = makeCall(definition, channel, request, options);\n\n    yield* response;\n  }\n\n  const method =\n    middleware == null\n      ? bidiStreamingMethod\n      : (request: AsyncIterable<Request>, options: CallOptions) =>\n          middleware(\n            {\n              method: methodDescriptor,\n              requestStream: true,\n              request,\n              responseStream: true,\n              next: bidiStreamingMethod,\n            },\n            options,\n          );\n\n  return (request, options) => {\n    const iterable = method(request, {\n      ...defaultOptions,\n      ...options,\n    });\n    const iterator = iterable[Symbol.asyncIterator]();\n\n    return {\n      [Symbol.asyncIterator]() {\n        return {\n          async next() {\n            const result = await iterator.next();\n\n            if (result.done && result.value != null) {\n              return await iterator.throw(\n                new Error(\n                  'A middleware returned a message, but expected to return void for bidirectional streaming method',\n                ),\n              );\n            }\n\n            return result;\n          },\n          return() {\n            return iterator.return();\n          },\n          throw(err) {\n            return iterator.throw(err);\n          },\n        };\n      },\n    };\n  };\n}\n","import {isAbortError, rethrowAbortError} from 'abort-controller-x';\nimport {CallOptions, ClientError, Metadata, Status} from 'nice-grpc-common';\nimport {MethodDefinition} from '../service-definitions';\nimport {Channel} from './channel';\nimport {decodeResponse} from './decodeResponse';\nimport {encodeRequest} from './encodeRequest';\nimport {makeInternalErrorMessage} from './makeInternalErrorMessage';\nimport {parseTrailer} from './parseTrailer';\n\n/** @internal */\nexport async function* makeCall<Request, Response>(\n  definition: MethodDefinition<Request, unknown, unknown, Response>,\n  channel: Channel,\n  request: AsyncIterable<Request>,\n  options: CallOptions,\n): AsyncIterable<Response> {\n  const {\n    metadata,\n    signal = new AbortController().signal,\n    onHeader,\n    onTrailer,\n  } = options;\n\n  let receivedTrailersOnly = false;\n  let status: Status | undefined;\n  let message: string | undefined;\n\n  function handleTrailer(trailer: Metadata) {\n    if (receivedTrailersOnly) {\n      if (new Map(trailer).size > 0) {\n        throw new ClientError(\n          definition.path,\n          Status.INTERNAL,\n          'Received non-empty trailer after trailers-only response',\n        );\n      } else {\n        return;\n      }\n    }\n\n    const parsedTrailer = parseTrailer(trailer);\n\n    ({status, message} = parsedTrailer);\n    onTrailer?.(parsedTrailer.trailer);\n  }\n\n  const finalMetadata = Metadata(metadata);\n\n  finalMetadata.set('content-type', 'application/grpc-web+proto');\n  finalMetadata.set('x-grpc-web', '1');\n\n  const innerAbortController = new AbortController();\n\n  const abortListener = () => {\n    innerAbortController.abort();\n  };\n\n  signal.addEventListener('abort', abortListener);\n\n  let finished = false;\n  let requestError: {err: unknown} | undefined;\n\n  async function* interceptRequestError() {\n    try {\n      for await (const item of request) {\n        if (finished) {\n          throw new Error('Request finished');\n        }\n\n        yield item;\n      }\n    } catch (err) {\n      requestError = {err};\n      innerAbortController.abort();\n      throw err;\n    }\n  }\n\n  async function* handleTransportErrors() {\n    try {\n      return yield* channel.transport({\n        url: channel.address + definition.path,\n        metadata: finalMetadata,\n        body: encodeRequest({\n          request: interceptRequestError(),\n          encode: definition.requestSerialize,\n        }),\n        signal: innerAbortController.signal,\n        method: definition,\n      });\n    } catch (err) {\n      rethrowAbortError(err);\n\n      throw new ClientError(\n        definition.path,\n        Status.UNKNOWN,\n        `Transport error: ${makeInternalErrorMessage(err)}`,\n      );\n    }\n  }\n\n  const response = decodeResponse({\n    response: handleTransportErrors(),\n    decode: definition.responseDeserialize,\n    onHeader(header) {\n      const isTrailersOnly = header.has('grpc-status');\n\n      if (isTrailersOnly) {\n        handleTrailer(header);\n\n        receivedTrailersOnly = true;\n      } else {\n        onHeader?.(header);\n      }\n    },\n    onTrailer(trailer) {\n      handleTrailer(trailer);\n    },\n  });\n\n  try {\n    yield* response;\n  } catch (err) {\n    if (requestError !== undefined) {\n      throw requestError.err;\n    } else if (err instanceof ClientError || isAbortError(err)) {\n      throw err;\n    } else {\n      throw new ClientError(\n        definition.path,\n        Status.INTERNAL,\n        makeInternalErrorMessage(err),\n      );\n    }\n  } finally {\n    finished = true;\n    signal.removeEventListener('abort', abortListener);\n\n    if (status != null && status !== Status.OK) {\n      throw new ClientError(definition.path, status, message ?? '');\n    }\n  }\n\n  if (status == null) {\n    throw new ClientError(\n      definition.path,\n      Status.UNKNOWN,\n      'Response stream closed without gRPC status. This may indicate a misconfigured CORS policy on the server: Access-Control-Expose-Headers must include \"grpc-status\" and \"grpc-message\".',\n    );\n  }\n}\n","import {\n  CallOptions,\n  ClientMiddleware,\n  composeClientMiddleware,\n} from 'nice-grpc-common';\nimport {\n  AnyMethodDefinition,\n  CompatServiceDefinition,\n  NormalizedServiceDefinition,\n  normalizeServiceDefinition,\n  ServiceDefinition,\n} from '../service-definitions';\nimport {Channel} from './channel';\nimport {Client} from './Client';\nimport {createBidiStreamingMethod} from './createBidiStreamingMethod';\nimport {createClientStreamingMethod} from './createClientStreamingMethod';\nimport {createServerStreamingMethod} from './createServerStreamingMethod';\nimport {createUnaryMethod} from './createUnaryMethod';\n\nexport type ClientFactory<CallOptionsExt = {}> = {\n  /**\n   * Attach a middleware to the client factory.\n   *\n   * This method returns a new client factory with the middleware attached.\n   *\n   * A middleware that is attached first, will be invoked last.\n   *\n   * @param middleware The middleware to attach.\n   * @returns A new client factory with the middleware attached.\n   */\n  use<Ext>(\n    middleware: ClientMiddleware<Ext, CallOptionsExt>,\n  ): ClientFactory<CallOptionsExt & Ext>;\n  /**\n   * Create a client using the client factory.\n   *\n   * @param definition The service definition.\n   * @param channel The channel to use.\n   * @param defaultCallOptions Default call options per method, or `'*'` for all\n   *     methods.\n   */\n  create<Service extends CompatServiceDefinition>(\n    definition: Service,\n    channel: Channel,\n    defaultCallOptions?: DefaultCallOptions<\n      NormalizedServiceDefinition<Service>,\n      CallOptionsExt\n    >,\n  ): Client<Service, CallOptionsExt>;\n};\n\nexport type DefaultCallOptions<\n  Service extends ServiceDefinition,\n  CallOptionsExt = {},\n> = {\n  [K in keyof Service | '*']?: CallOptions & Partial<CallOptionsExt>;\n};\n\n/**\n * Create a client factory that can be used to create clients with middleware.\n */\nexport function createClientFactory(): ClientFactory {\n  return createClientFactoryWithMiddleware();\n}\n\n/**\n * Create a client with no middleware.\n *\n * This is the same as calling `createClientFactory().create()`.\n */\nexport function createClient<Service extends CompatServiceDefinition>(\n  definition: Service,\n  channel: Channel,\n  defaultCallOptions?: DefaultCallOptions<NormalizedServiceDefinition<Service>>,\n): Client<Service> {\n  return createClientFactory().create(definition, channel, defaultCallOptions);\n}\n\nfunction createClientFactoryWithMiddleware<CallOptionsExt = {}>(\n  middleware?: ClientMiddleware<CallOptionsExt>,\n): ClientFactory<CallOptionsExt> {\n  return {\n    use<Ext>(newMiddleware: ClientMiddleware<Ext, CallOptionsExt>) {\n      return createClientFactoryWithMiddleware(\n        middleware == null\n          ? (newMiddleware as ClientMiddleware<Ext & CallOptionsExt>)\n          : composeClientMiddleware(middleware, newMiddleware),\n      );\n    },\n\n    create<Service extends CompatServiceDefinition>(\n      definition: Service,\n      channel: Channel,\n      defaultCallOptions: DefaultCallOptions<\n        NormalizedServiceDefinition<Service>,\n        CallOptionsExt\n      > = {},\n    ) {\n      type NormalizedService = NormalizedServiceDefinition<Service>;\n\n      const client = {} as {\n        [K in keyof NormalizedService]: Function;\n      };\n\n      const methodEntries = Object.entries(\n        normalizeServiceDefinition(definition),\n      ) as Array<[keyof NormalizedService, AnyMethodDefinition]>;\n\n      for (const [methodName, methodDefinition] of methodEntries) {\n        const defaultOptions = {\n          ...defaultCallOptions['*'],\n          ...defaultCallOptions[methodName],\n        } as CallOptions;\n\n        if (!methodDefinition.requestStream) {\n          if (!methodDefinition.responseStream) {\n            client[methodName] = createUnaryMethod(\n              methodDefinition,\n              channel,\n              middleware,\n              defaultOptions,\n            );\n          } else {\n            client[methodName] = createServerStreamingMethod(\n              methodDefinition,\n              channel,\n              middleware,\n              defaultOptions,\n            );\n          }\n        } else {\n          if (!methodDefinition.responseStream) {\n            client[methodName] = createClientStreamingMethod(\n              methodDefinition,\n              channel,\n              middleware,\n              defaultOptions,\n            );\n          } else {\n            client[methodName] = createBidiStreamingMethod(\n              methodDefinition,\n              channel,\n              middleware,\n              defaultOptions,\n            );\n          }\n        }\n      }\n\n      return client as Client<Service, CallOptionsExt>;\n    },\n  };\n}\n","import {CompatServiceDefinition, MethodDefinition, ServiceDefinition} from '.';\n\nexport interface GrpcWebServiceDefinition {\n  serviceName: string;\n}\n\nexport interface GrpcWebMethodDefinition<\n  TRequest extends ProtobufMessage,\n  TResponse extends ProtobufMessage,\n> {\n  methodName: string;\n  service: GrpcWebServiceDefinition;\n  requestStream: boolean;\n  responseStream: boolean;\n  requestType: ProtobufMessageClass<TRequest>;\n  responseType: ProtobufMessageClass<TResponse>;\n}\n\nexport interface GrpcWebUnaryMethodDefinition<\n  TRequest extends ProtobufMessage,\n  TResponse extends ProtobufMessage,\n> extends GrpcWebMethodDefinition<TRequest, TResponse> {\n  requestStream: false;\n  responseStream: false;\n}\n\nexport interface ProtobufMessageClass<T extends ProtobufMessage> {\n  new (): T;\n  deserializeBinary(bytes: Uint8Array): T;\n}\n\nexport interface ProtobufMessage {\n  toObject(): {};\n  serializeBinary(): Uint8Array;\n}\n\nexport type FromGrpcWebServiceDefinition<\n  Service extends GrpcWebServiceDefinition,\n> = {\n  [M in GrpcWebServiceMethodKeys<Service> as Uncapitalize<M>]: FromGrpcWebMethodDefinition<\n    Service[M]\n  >;\n};\n\nexport type GrpcWebServiceMethodKeys<Service extends GrpcWebServiceDefinition> =\n  {\n    [K in keyof Service]: Service[K] extends GrpcWebMethodDefinition<any, any>\n      ? K\n      : never;\n  }[keyof Service] &\n    string;\n\nexport type FromGrpcWebMethodDefinition<Method> =\n  Method extends GrpcWebMethodDefinition<infer Request, infer Response>\n    ? MethodDefinition<\n        Request,\n        Request,\n        Response,\n        Response,\n        Method['requestStream'],\n        Method['responseStream']\n      >\n    : never;\n\nexport function fromGrpcWebServiceDefinition(\n  definition: GrpcWebServiceDefinition,\n): ServiceDefinition {\n  const result: ServiceDefinition = {};\n\n  for (const [key, value] of Object.entries(definition)) {\n    if (key === 'serviceName') {\n      continue;\n    }\n\n    const method = value as GrpcWebMethodDefinition<any, any>;\n\n    result[uncapitalize(key)] = {\n      path: `/${definition.serviceName}/${key}`,\n      requestStream: method.requestStream,\n      responseStream: method.responseStream,\n      requestDeserialize: method.requestType.deserializeBinary,\n      requestSerialize: (value: ProtobufMessage) => value.serializeBinary(),\n      responseDeserialize: method.responseType.deserializeBinary,\n      responseSerialize: (value: ProtobufMessage) => value.serializeBinary(),\n      options: {},\n    };\n  }\n\n  return result;\n}\n\nexport function isGrpcWebServiceDefinition(\n  definition: CompatServiceDefinition,\n): definition is GrpcWebServiceDefinition {\n  return 'prototype' in definition;\n}\n\nfunction uncapitalize(value: string): string {\n  if (value.length === 0) {\n    return value;\n  }\n\n  return value[0].toLowerCase() + value.slice(1);\n}\n"],"names":["exports","data","metadata","nice_grpc_common_1","Metadata","text","TextDecoder","decode","line","split","splitIndex","indexOf","Error","concat","key","slice","trim","toLowerCase","value","endsWith","item","append","js_base64_1","Base64","toUint8Array","require","self","window","global","module","version","VERSION","_hasBuffer","Buffer","_TD","undefined","_TE","TextEncoder","b64ch","b64chs","Array","prototype","call","b64tab","a","tab","forEach","c","i","b64re","_fromCC","String","fromCharCode","bind","_U8Afrom","Uint8Array","from","it","_mkUriSafe","src","replace","m0","_tidyB64","s","btoaPolyfill","bin","u32","c0","c1","c2","asc","pad","length","charCodeAt","TypeError","substring","_btoa","btoa","toString","_fromUint8Array","u8a","maxargs","strs","l","push","apply","subarray","join","fromUint8Array","urlsafe","cb_utob","cc","re_utob","utob","u","_encode","encode","encodeURI","re_btou","cb_btou","cccc","offset","btou","b","atobPolyfill","test","u24","r1","r2","charAt","_atob","atob","_toUint8Array","map","_unURI","_decode","_noEnum","v","enumerable","writable","configurable","extendString","_add","name","body","Object","defineProperty","this","extendUint8Array","extendBuiltins","gBase64","fromBase64","toBase64","encodeURL","isValid","keys","k","factory","definition","channel","middleware","defaultOptions","methodDescriptor","path","requestStream","responseStream","options","unaryMethod","_x","_x2","_unaryMethod","arguments","_wrapAsyncGenerator","request","isAsyncIterable_1","isAsyncIterable","response","makeCall_1","makeCall","asyncIterableOf_1","asyncIterableOf","unaryResponse","_iteratorError","_iteratorAbruptCompletion","_didIteratorError","_step","_iterator","_asyncIterator","_awaitAsyncGenerator","next","done","message","ClientError","Status","INTERNAL","err","return","method","async","iterator","_objectSpread","Symbol","asyncIterator","result","throw","ARRAY_ERROR","AsyncSink","constructor","_ended","_values","_resolvers","write","_push","type","error","resolve","reject","shift","Promise","end","serverStreamingMethod","_serverStreamingMethod","_asyncGeneratorDelegate","_encodeRequest","framing_1","_ref","bytes","encodeFrame","get","composeClientMiddleware","__exportStar","fetch_1","FetchTransport","websocket_1","WebsocketTransport","nodeHttp_1","NodeHttpTransport","_ref2","url","signal","aborted","abort_controller_x_1","AbortError","frames","AsyncSink_1","addEventListener","websocketUrl","URL","protocol","webSocket","isomorphic_ws_1","default","binaryType","event","ArrayBuffer","wasClean","code","reason","pipeAbortController","AbortController","readyState","CONNECTING","waitForEvent","send","values","valueString","pairString","isValidCharCode","encodeMetadata","chunk","throwIfAborted","set","pipeBody","catch","isAbortError","abort","close","__importDefault","val","LPM_HEADER_LENGTH","view","DataView","buffer","byteOffset","byteLength","compressed","getUint8","isMetadata","getUint32","messageBytes","setUint32","_decodeResponse","concatBuffers_1","decodeMetadata_1","onHeader","onTrailer","lpmHeader","receivedHeader","receivedTrailer","receivedData","createChunkBuffer","frame","handleHeader","header","handleTrailer","trailer","position","Math","min","targetLength","totalLength","chunks","concatBuffers","parseLpmHeader","decodeMetadata","JSON","stringify","address","transport","config","_fetchTransport","requestBody","ReadableStream","start","pull","controller","enqueue","cancel","_b","_a","bodyBuffer","fetch","headers","metadataToHeaders","cache","credentials","headersToMetadata","ok","responseText","statusCode","UNAUTHENTICATED","PERMISSION_DENIED","UNIMPLEMENTED","UNAVAILABLE","UNKNOWN","getStatusFromHttpCode","status","getErrorDetailsFromHttpResponse","reader","getReader","abortListener","read","removeEventListener","Headers","clientStreamingMethod","_clientStreamingMethod","_asyncIterableOf","grpc_web_1","isGrpcWebServiceDefinition","fromGrpcWebServiceDefinition","ts_proto_1","isTsProtoServiceDefinition","fromTsProtoServiceDefinition","buffers","entries","methods","requestEncode","requestType","requestFromPartial","fromPartial","responseEncode","responseType","responseFromPartial","fullName","requestDeserialize","requestSerialize","finish","responseDeserialize","responseSerialize","ws","WebSocket","MozWebSocket","statusValue","statusNum","decodeURIComponent","trailerCopy","delete","bidiStreamingMethod","_bidiStreamingMethod","_x3","_x4","_makeCall","decodeResponse_1","encodeRequest_1","makeInternalErrorMessage_1","parseTrailer_1","receivedTrailersOnly","Map","size","parsedTrailer","parseTrailer","finalMetadata","innerAbortController","requestError","finished","interceptRequestError","_interceptRequestError","_handleTransportErrors","encodeRequest","rethrowAbortError","makeInternalErrorMessage","decodeResponse","handleTransportErrors","has","OK","createClientFactory","defaultCallOptions","create","service_definitions_1","createBidiStreamingMethod_1","createClientStreamingMethod_1","createServerStreamingMethod_1","createUnaryMethod_1","createClientFactoryWithMiddleware","use","newMiddleware","client","methodEntries","normalizeServiceDefinition","methodName","methodDefinition","createBidiStreamingMethod","createClientStreamingMethod","createServerStreamingMethod","createUnaryMethod","uncapitalize","serviceName","deserializeBinary","serializeBinary"],"sourceRoot":""}